var Sudoku;
(function (Sudoku) {
    var fixedGenerator = (function () {
        function fixedGenerator() {
            this.MEDIUM = [];
            this.HARD = [];
            this.EXTREME = [];
            this.EASY = [
                "000105000140000670080002400063070010900000003010090520007200080026000035000409000",
                "000004028406000005100030600000301000087000140000709000002010003900000507670400000",
                "400010000000309040070005009000060021004070600190050000900400070030608000000030006",
                "309000400200709000087000000750060230600904008028050041000000590000106007006000104",
                "000704005020010070000080002090006250600070008053200010400090000030060090200407000",
                "000041000060000200000000000320600000000050041700000000000200300048000000501000000",
                "002090300805000000100000000090060040000000058000000001070000200300500000000100000",
                "000000000001900500560310090100600028004000700270004003040068035002005900000000000",
                "300000000970010000600583000200000900500621003008000005000435002000090056000000001",
                "000921003009000060000000500080403006007000800500700040003000000020000700800195000",
                "093004560060003140004608309981345000347286951652070483406002890000400010029800034",
                "123000587005817239987000164051008473390750618708100925076000891530081746810070352",
                "036210840800045631014863009287030456693584000145672398408396000350028064060450083",
                "004630500605401003370059640938060154457198362216345987043506019060903405509014036",
                "645010893738459621219638745597060184481975000326841579902080010803190000164020908",
                "050030602642895317037020800023504700406000520571962483214000900760109234300240170",
                "008003102002810306314260980923648700476351298185900634047030820209080500801700460",
                "804537000023614085605982034000105870500708306080203450200859003050371208008426507",
                "506094003000086925892513647738629050154378296629451738987145362000960000000830009",
                "093824560085600002206075008321769845000258300578040296850016723007082650002507180",
                "300052000250300010004607523093200805570000030408035060005408300030506084840023056",
                "290000830000020970000109402845761293600000547009045008903407000060030709050000384",
                "023401967006702100170690020749120006001960700000047091030076010007014800010209670",
                "587412693206037800100008200002001748050724900714800500005240109001085400420170305",
                "923407015876050924500200030769020140432000059185004260098042071207030486000708092",
                "986721345304956007007030960073065009690017003100390276000679030069143700731582694",
                "024090008800402900719000240075804300240900587038507604082000059007209003490050000",
                "760005804530400060849006050307060205256710003904050607423600570695007000178500026",
                "100480003070156492400370186729564318504031009010290045007040901040913067901020004",
                "100390004029000300000502800016000570900000006042000080000139000695000731231756008",
                "592178346063245089840936050006852904904617508085394600059481060400063890608029400",
                "200008001194762835000010042470000020009200100020000059658927010913654287742183596",
                "617304800485010307923857641359040078164078530278030064592761483841003706736480010",
                "400052008708300002900080040596127384187030256004568719840000005000003801000895400",
                "004302985080100006000800041900600500036950070057008693590000007000509060602700859",
                "092001750500200008000030200075004960200060075069700030008090020700003089903800040",
                "400052008708300002900080040596127384187030256004568719840000005000003801000895400",
                "620050030000920150015004000003000600180000075062000300001249700296785413040060592",
                "000602400002403600000080021070000840309040207045000030500060000003159780008204500",
                "010600000000103207400950006745869000829000465100524978600090004201406000004000680",
                "080000070001800009270961005100082700007413500008790003300248007800000200742000060",
                "900008503080020097006000004300406002060080359800203001700860205650070018008500006",
                "005907600090000080000830490010580000009000300000096010452018000030000040007400200",
                "215800060400625000006300000950080040002947000040530092000053406524768931060400058",
                "520800367709630050600725009006080700800056003002070600100542906090068500065007040",
                "006019500907068043080000000804190000000645800000802904000006420540001607002984300",
                "150432069904186005003070004002000040000090002030020500000000400346750008810240056",
                "092400018846312597100900002000601004610040080704809000200003006001064820460000070",
                "002006500400000023000002406978060312613729845245010679800900200320600054004200008",
                "300000709019070005076090030090086301108000600600410050080060203700030086963000007",
                "060000509002400600905000070009010086000206905056080700090000162008007493604000857",
                "900875001000109000001302009190023058208057103530081060400706800000204000700518004",
                "008907050070040010060501007630000900009000800007400035700603020040070060006104700",
                "000000605000300090080004001040020970000000000031080060900600020010007000504000000",
                "100007090030020008009600500005300900010080002600004000300000010041000007007000300",
                "800000000003600000070090200050007000000045700000100030001000068008500010090000400"];
        }
        fixedGenerator.prototype.genrate = function (board, level) {
            var succeed = false;
            var game;
            var cellValue;
            var levelStr = Sudoku.gameLevel[level];
            if (this[levelStr] != null && this[levelStr].length > 0) {
                var randomIndex = Math.floor(Math.random() * this[levelStr].length);
                game = this[levelStr][randomIndex];

                if (game.length == 81) {
                    for (var r = 0; r < 9; r++) {
                        for (var c = 0; c < 9; c++) {
                            cellValue = parseInt(game.charAt((r * 9) + c));
                            if (this.IsNumeric(cellValue) && cellValue >= 0) {
                                board.setSystemCell(r, c, cellValue);
                            } else
                                return false;
                        }
                    }
                    succeed = true;
                }
            }

            return succeed;
        };
        fixedGenerator.prototype.IsNumeric = function (strChar) {
            var strValidChars = "0123456789";
            var blnResult = true;
            if (strChar.length === 0) {
                return false;
            }
            if (strValidChars.indexOf(strChar) == -1) {
                blnResult = false;
            }
            return blnResult;
        };
        return fixedGenerator;
    })();
    Sudoku.fixedGenerator = fixedGenerator;
})(Sudoku || (Sudoku = {}));
